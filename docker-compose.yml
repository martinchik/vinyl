version: '3'

services:
  postgresserver:
     image: postgres
     hostname: postgresdb
     container_name: postgresdb
     restart: always
     ports:
       - 5430:5432
     environment:
        POSTGRES_USER: "dbuser"
        POSTGRES_PASSWORD: "dbpwd"
        POSTGRES_DB: "vinylshop"
     volumes:
       - pgdata:/var/lib/postgresql/data
     networks:
      - vinylnetwork

  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - vinylnetwork

  kafka:
    image: wurstmeister/kafka:1.0.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:      
      KAFKA_CREATE_TOPICS: "dirty_records:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181    
      KAFKA_BROKER_ID: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - vinylnetwork

  vinyl.parsingjob:
    image: vinyl.parsingjob
    hostname: parsingjob
    container_name: parsingjob
    links:
       - postgresserver
    depends_on:
      - kafka
      - postgresserver
    ports:
      - "20081:20081"
    build:
      context: ./Vinyl.ParsingJob
      dockerfile: Dockerfile
    environment:
      DB_CONNECTION_STRING: "host=postgresdb;port=5432;database=vinylshop;username=dbuser;password=dbpwd"
    networks:
      - vinylnetwork

  vinyl.recordprocessingjob:
    image: vinyl.recordprocessingjob
    hostname: recordprocessingjob
    container_name: recordprocessingjob
    depends_on:
      - kafka
    ports:
      - "20082:20082"
    build:
      context: ./Vinyl.RecordProcessingJob
      dockerfile: Dockerfile
    networks:
      - vinylnetwork

volumes:
  pgdata:

networks:
  vinylnetwork:
     driver: bridge